// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  user_name String @unique
  public_id String @unique

  created_at DateTime  @default(now())
  deleted_at DateTime?

  userAuth UserAuth[]
  buyLogs  BuyLog[]
  sellLogs SellLog[]
}

model UserAuth {
  id         Int       @id @default(autoincrement())
  user_id    Int
  password   String
  blocked_at DateTime?
  last_login DateTime?

  created_at DateTime  @default(now())
  deleted_at DateTime?

  user User @relation(fields: [user_id], references: [id])
}

model BuyLog {
  id          Int      @id @default(autoincrement())
  buy_item    String
  buy_qty     Float
  buy_rate    Float
  buy_at      DateTime @default(now())
  balance_qty Float
  remarks     String?

  created_at DateTime  @default(now())
  deleted_at DateTime?
  created_by Int

  sellLogs  SellLog[]
  createdBy User      @relation(fields: [created_by], references: [id])
}

model SellLog {
  id         Int      @id @default(autoincrement())
  sell_qty   Float
  sell_rate  Float
  sell_at    DateTime @default(now())
  remarks    String?
  buy_log_id Int

  created_at DateTime  @default(now())
  deleted_at DateTime?
  created_by Int

  buyLog    BuyLog @relation(fields: [buy_log_id], references: [id])
  createdBy User   @relation(fields: [created_by], references: [id])
}
